// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4089.Test.subsystems;

import org.usfirst.frc4089.Test.RobotMap;
import org.usfirst.frc4089.Test.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveBase extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX right1 = RobotMap.driveBaseRight1;
    private final WPI_TalonSRX right2 = RobotMap.driveBaseRight2;
    private final SpeedControllerGroup rightSpeed = RobotMap.driveBaserightSpeed;
    private final WPI_TalonSRX left1 = RobotMap.driveBaseLeft1;
    private final WPI_TalonSRX left2 = RobotMap.driveBaseLeft2;
    private final SpeedControllerGroup leftSpeed = RobotMap.driveBaseleftSpeed;
    private final Encoder leftQuadratureEncoder = RobotMap.driveBaseLeftQuadratureEncoder;
    private final Encoder rightQuadratureEncoder = RobotMap.driveBaseRightQuadratureEncoder;
    private final AnalogGyro analogGyro1 = RobotMap.driveBaseAnalogGyro1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    private final DifferentialDrive driveBaseRobotDrive = new DifferentialDrive(rightSpeed, leftSpeed);
    
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new UserDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void Drive(Joystick driveJoystick)
    {
    	double y = -driveJoystick.getRawAxis(1);
    	double x = -driveJoystick.getRawAxis(0);
    	
    	
    	if(true != driveJoystick.getRawButton(4))
    	{
        	if(true == driveJoystick.getRawButton(1))
        	{
        		y = y/2.5;
        		x = x/2.8;
        	}
        	else
        	{
        		y = y/1.5;
        		x = x/1.8;
        	}
    	}
		driveBaseRobotDrive.arcadeDrive(y, x);
    }
    
    public void resetEncoders()
    {
    	left1.setSelectedSensorPosition(0,0,20);
        right2.setSelectedSensorPosition(0,0,20);
    }
}

